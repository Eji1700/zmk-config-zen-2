#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |   T    ||   Y    |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |   G    ||   H    |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |   B    ||   N    |  M   |  ,  |  .  |  /  | ESC  |
//                    | ALT | GUI | SPC(1) || ENT(2) |  L3  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
             &kp LALT &kp LGUI &lt 1 SPACE   &lt 2 RET    &mo 3     &kp RALT
                        >;
                };
                move_layer {
                        label = "MOVE";
// --------------------------------------------------------------------------------------
// | ESC  |     |     |  [{  |   ]} |     ||  PGUP  |  HOME  |  UP  |  END  |     | DEL |
// |      |     |  =+ |   (  |   )  |     ||  PGDN  |  LFT   |  DWN |  RGT  |     |     |
// |      |     |     |      |      |     ||        |        |      |       |     |     |
//                    |      |      |     ||        |        |      |
                        bindings = <
   &kp ESC &trans &trans    &kp LBKT &kp RBKT &trans   &kp PG_UP &kp HOME &kp UP   &kp END   &trans &kp DEL
   &trans  &trans &kp EQUAL &kp LPAR &kp RPAR &trans   &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &trans &trans
   &trans  &trans &trans    &trans   &trans   &trans   &trans    &trans   &trans   &trans    &trans &trans
                            &trans   &trans   &trans   &trans    &trans   &trans
                        >;
                };
                number_layer {
                        label = "NUMBER";
// ----------------------------------------------------------------------------
// |  `~  |     |     | [{  |  ]} |     ||  *  |  7  |  8  |  9  |  +  | "\|" |
// |      |     |  =+ |  (  |  )  |     ||  /  |  4  |  5  |  6  |  -  |  ;   |
// |      |     |     |     |     |     ||  0  |  1  |  2  |  3  |     |      |
//                    |     |     |     ||     |     |     |
                        bindings = <
   &kp GRAVE &trans &trans    &kp LBKT &kp RBKT &trans   &kp KP_ASTERISK &kp N7 &kp N8 &kp N9 &kp PLUS  &kp BSLH
   &trans    &trans &kp EQUAL &kp LPAR &kp RPAR &trans   &kp   KP_SLASH  &kp N4 &kp N5 &kp N6 &kp MINUS &kp SEMI
   &trans    &trans &trans    &trans   &trans   &trans   &kp      N0     &kp N1 &kp N2 &kp N3 &trans    &trans
                    	      &trans   &trans   &trans   &trans    &trans    &trans
                        >;
                };
                function_layer {
                        label = "FUNC";
// ----------------------------------------------------------------------------
// |      |     |     |     |     |     ||  F10  |  F7  |  F8  |  F9  |    |     |
// |      |     |     |     |     |     ||  F11  |  F4  |  F5  |  F6  |    |     |
// |      |     |     |     |     |     ||  F12  |  F1  |  F2  |  F3  |    |     |
//                    |     |     |     ||     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans   &kp F10 &kp F7 &kp F8 &kp F9 &trans &trans
   &trans &trans &trans &trans &trans &trans   &kp F11 &kp F4 &kp F5 &kp F6 &trans &trans
   &trans &trans &trans &trans &trans &trans   &kp F12 &kp F1 &kp F2 &kp F3 &trans &trans
                        &trans &trans &trans   &trans  &trans &trans
                        >;
                };
        };
};